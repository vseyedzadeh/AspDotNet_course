@*@model IEnumerable<VidPlace.Models.Media>*@
@model PagedList.IPagedList<VidPlace.Models.Media>
    @using PagedList.Mvc;

@{
    ViewBag.Title = "getMedia";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Media List:</h3>

@*
    @if (!Model.Any())
    {
        <h3>Media Not found</h3>
    }
    else
    {
        <table class="table table-hover table-bordered">

            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.ID</td>
                    <td>@item.Name</td>
                </tr>
            }

        </table>
    }
*@
<p>
    @Html.ActionLink("New Media", "New", "Medias" , null, new { @class= "btn btn-primary"})
</p>

@using (Html.BeginForm("Index", "Medias", FormMethod.Get))
{
<p>
    Find Media by Name: @Html.TextBox("searchString", ViewBag.CurrentFilter as string)
    <input type="submit" value="Search" />
 </p>
}


@if (!Model.Any())
{
    <h3>There are no Media available</h3>
}
else
{
    <p>@Html.ActionLink("Create New Media", "New", "Medias")</p>

    <table class="table table-hover table-bordered">
        <thead>
            <tr>
                
                <th>@Html.ActionLink("Media (Click for Details)", "Index", 
                   new { sortOrder = ViewBag.NameSortParameter, currentFilter = ViewBag.CurrentFilter})
                </th>               
                
                <th>
                    @Html.ActionLink("Genre", "Index",
                   new { sortOrder = ViewBag.GenreSortParameter, currentFilter = ViewBag.CurrentFilter })
            </th>                  

            </tr>
        </thead>

        @foreach (var item in Model)
        {
            <tr>
                
                @*ActionLink is a redirect*@
                <td>@Html.ActionLink(item.Name, "Detail", "Medias", new { mediaID = item.ID }, null)</td>
                <td>@item.Genre.Name</td>

            </tr>
        }

    </table>
}
    <br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter}))

